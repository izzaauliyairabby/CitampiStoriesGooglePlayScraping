# -*- coding: utf-8 -*-
"""Data Scraping Citampi Stories.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y1dknU4GwAMh5zbjM-MuMR8-QEvmzCvP

# Scraping Datasets Citampi Stories di Google Playstore
"""

## Install Google Play Scraper
!pip install google-play-scraper

# Import Packages
import os
from google_play_scraper import app
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import tensorflow as tf

"""## Scraping menggunakan Google Play Scraper"""

from google_play_scraper import Sort, reviews_all

# Fething Seluruh data Citampi Stories dari Playstore
result = reviews_all(
    'com.ikanasinproduction.cintadicitampi',  # Link Aplikasi
    lang='id',                                # Bahasa Reviews
    country='id',                             # Negara Reviews
    count = 10000,                            # Maks 10000
    sort=Sort.MOST_RELEVANT,                  # Mengurutkan Review berdasarkan yang paling relevant
    filter_score_with=None                    # Tidak Mengurutkan Review berdasarkan Rating
)

# Menampilkan Hasil Scraping
print(result)

# Slicing data, membatasi hingga 10000 data saja
if len(result) > 10000:
    result = result[:10000]

# Check Nomor Fething Secara Total
print(f"Number of reviews fetched: {len(result)}")

dataframe = pd.DataFrame(result)
dataframe.head(100)

# Membatasi dataframe hanya dengan username, content, score, at, appversion

# Select only the desired columns
dataframe = dataframe[['userName','content', 'score', 'at', 'appVersion']]
dataframe.head(100)

"""## Pelabelan Data

"""

# Fungsi untuk melabelkan data berdasarkan score
def dataframe_labeled(df):
    # Menambahkan kolom baru 'label' berdasarkan kondisi score
    df['label'] = df['score'].apply(lambda x: 'negatif' if x < 3 else ('netral' if x == 3 else 'positif'))

    # Memilih kolom 'content', 'score', dan 'at' saja
    df_filtered = df[['content', 'score', 'at', 'label']]

    # Mengurutkan dari rating tertinggi ke terendah
    df_sorted = df_filtered.sort_values(by='score', ascending=False)

    # Menampilkan 100 baris pertama dari DataFrame yang diurutkan
    return df_sorted.head(100)

# Contoh penggunaan dengan data scraping yang telah Anda miliki
# Misalnya 'result' adalah data yang Anda dapat dari scraping

# Mengonversi ke DataFrame
app_reviews_df = pd.DataFrame(result)

# Memanggil fungsi untuk melabelkan dan menampilkan hasil
labeled_reviews = dataframe_labeled(app_reviews_df)

# Menampilkan hasil
print(labeled_reviews)

"""## Konversi Dataframe ke CSV Files"""

# Menyimpan CSV
from google.colab import files
labeled_reviews.to_csv('citampistoriesscraping.csv', index=False)
files.download('citampistoriesscraping.csv')